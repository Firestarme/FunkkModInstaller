<UserControl x:Class="FunkkModInstaller.InstallerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FunkkModInstaller"
             xmlns:utils="clr-namespace:FunkkModInstaller.Utilities"
             xmlns:mats="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" AllowDrop="True">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <!--<Rectangle OpacityMask="Black" Fill="#FF1B1518" Grid.ColumnSpan="3"></Rectangle>-->

        <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"/>
        <Rectangle Grid.Column="1" HorizontalAlignment="Center" Fill="{StaticResource MainHighlight}" Width="1"/>

        <Grid MinWidth="200">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Image Source="{StaticResource LogoDrawing}" Height="100" Width="100" />

            <StackPanel Grid.Row="1">
                <Button x:Name="Button_Update" Grid.Row="0" Margin="10,5,10,10" Height="40" Click="Button_Update_Click">ERROR</Button>
                <ComboBox x:Name="CombiBox_SelectPack" Grid.Row="1" Margin="10,5,10,10" Height="40" ItemsSource="{Binding Packs}" SelectedItem="{Binding SelectedPack}" SelectionChanged="CombiBox_SelectPack_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:PackInfo}">
                            <Label Content="{Binding Path=Name}" FontSize="14"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
        </Grid>

        <Border x:Name="StageViewer" Grid.Column="2">
            <Grid Grid.Column="3">

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Rectangle Grid.ColumnSpan="4" Fill="{DynamicResource Grey3}"  HorizontalAlignment="Stretch" RadiusX="5" RadiusY="5" Margin="10"/>
                <DockPanel x:Name="Comp_BepinexInfo" HorizontalAlignment="Stretch" Margin="10" LastChildFill="False">

                    <Image Source="pack://application:,,,/Resources/BepInExLogo.png" Height="40" Width="40" Margin="10" />
                    <Label Foreground="White" Background="{StaticResource Grey3}" FontSize="16" Margin="10" VerticalContentAlignment="Center" Content="BepInEx Version:"/>
                    <Label Foreground="White" Background="{StaticResource Grey3}" FontSize="16" Grid.Column="2" Margin="10" VerticalContentAlignment="Center" Content="{Binding Path=Version}"/>

                    <mats:MaterialIcon DockPanel.Dock="Right" Grid.Column="4" Height="40" Width="40" VerticalAlignment="Center" Margin="10">
                        <mats:MaterialIcon.Style>
                            <Style TargetType="mats:MaterialIcon" BasedOn="{StaticResource {x:Type mats:MaterialIcon}}" >
                                <Style.Triggers>

                                    <!--Is Installed-->
                                    <DataTrigger Binding="{Binding Path=IsInstalled}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="CheckCircle"/>
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!--Is Change Requested-->
                                    <DataTrigger Binding="{Binding Path=IsUpdateRequired}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="SyncCircle"/>
                                            <Setter Property="Foreground" Value="Yellow"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!--Is Errored-->
                                    <DataTrigger Binding="{Binding Path=IsErrored}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="AlertCircle"/>
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                </Style.Triggers>
                                <Style.Setters>
                                    <Setter Property="Kind" Value="MinusCircle"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Grey2}"/>
                                </Style.Setters>
                            </Style>
                        </mats:MaterialIcon.Style>
                    </mats:MaterialIcon>

                    <!--<Button Grid.Column="3" Margin="10" MinWidth="100" DockPanel.Dock="Right">Verify</Button>-->

                </DockPanel>

                <utils:CopyModpackTarget Grid.Row="1" x:Name="PackDropTgt" CopyRequested="PackDropTgt_CopyRequested" MouseLeave="PackDropTgt_MouseLeave">

                    <utils:CopyModpackTarget.Overlay>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="150"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Rectangle HorizontalAlignment="Stretch" Grid.RowSpan="3" RadiusX="5" RadiusY="5" Margin="10" Fill="#FF232323"/>
                            <Rectangle HorizontalAlignment="Stretch" Grid.RowSpan="3" RadiusX="5" RadiusY="5" Margin="26" Fill="#FF505050"/>
                            <Ellipse Grid.Row="1" Width="120" Height="120" Fill="#FF232323"/>
                            <mats:MaterialIcon Grid.Row="1" Kind="FolderAdd" Height="64" Width="64" Foreground="White"/>

                            <Grid x:Name="ConfimAddPackUI" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Hidden">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <Rectangle Height="40" Fill="#FF232323" MinWidth="140" RadiusX="5" RadiusY="5"/>
                                <Label x:Name="AddModpackText" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">ERROR</Label>
                                <Button x:Name="AddModpackButton" Height="30" Width="100" Grid.Row="1" Margin="5" Click="ButtonAddModpack_Click">Add Pack</Button>
                            </Grid>
                        </Grid>
                    </utils:CopyModpackTarget.Overlay>

                    <Rectangle Fill="#FF505050" HorizontalAlignment="Stretch" RadiusX="5" RadiusY="5" Margin="10"/>

                    <Grid HorizontalAlignment="Stretch" Margin="10">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label HorizontalAlignment="Center" Margin="5" Foreground="White" FontSize="18" >Mods</Label>
                        <!--<Label HorizontalAlignment="Center" Margin="10" Foreground="White" Content="{Binding SelectedPack.Name}" />-->
                        <ScrollViewer Grid.Row="2" Margin="10" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                            <ItemsControl ItemsSource="{Binding Path=SelectedPack.Mods}" ItemTemplate="{DynamicResource ModInfoTemplate}"/>
                        </ScrollViewer>
                    </Grid>

                </utils:CopyModpackTarget>
            </Grid>
        </Border>
    </Grid>


    <UserControl.Resources>

        <DataTemplate DataType="{x:Type local:ModInfo}" x:Key="ModInfoTemplate">

            <Grid Margin="5">

                <Rectangle Fill="{DynamicResource Grey2}" RadiusX="5" RadiusY="5" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                <Rectangle Fill="{DynamicResource Grey3}" RadiusX="5" RadiusY="5" VerticalAlignment="Top" Height="62"/>

                <Expander Margin="6" Grid.RowSpan="2" VerticalAlignment="Top" >
                    <Expander.Header>
                        <Label Content="{Binding Path=ModName}" Foreground="White" FontSize="24" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Height="40" Margin="20,3,3,3"/>
                    </Expander.Header>
                    <TextBlock MinHeight="30" Text="{Binding Path=Description}" TextWrapping="Wrap" Margin="20" Foreground="#FFB9B9B9"/>
                </Expander>

                <Grid Height="62" VerticalAlignment="Top" IsHitTestVisible="True" Margin="0,0,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="{Binding Path=Version}" Foreground="White" FontSize="24" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalAlignment="Right" Height="40" Margin="20,3,3,3"/>

                    <mats:MaterialIcon Width="40" Height="40" Grid.Column="1" ToolTip="{Binding Message}" >
                        <mats:MaterialIcon.Style>
                            <Style TargetType="mats:MaterialIcon" BasedOn="{StaticResource {x:Type mats:MaterialIcon}}" >
                                <Style.Triggers>

                                    <!--Is Installed-->
                                    <DataTrigger Binding="{Binding Path=IsInstalled}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="CheckCircle"/>
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!--Is Change Requested-->
                                    <DataTrigger Binding="{Binding Path=IsUpdateRequired}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="SyncCircle"/>
                                            <Setter Property="Foreground" Value="Yellow"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                    <!--Is Errored-->
                                    <DataTrigger Binding="{Binding Path=IsErrored}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Kind" Value="AlertCircle"/>
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                </Style.Triggers>
                                <Style.Setters>
                                    <Setter Property="Kind" Value="MinusCircle"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Grey2}"/>
                                </Style.Setters>
                            </Style>

                        </mats:MaterialIcon.Style>
                    </mats:MaterialIcon>


                    <CheckBox Height="32" Width="32" Grid.Column="2" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="White" Background="{DynamicResource Grey3}" Margin="0,5,0,0" Style="{DynamicResource ModCheck}" IsChecked="{Binding Path=IsInstallDesired}" IsEnabled="{Binding Path=IsOptional}"/>
                </Grid>
            </Grid>
        </DataTemplate>


        <Style TargetType="{x:Type CheckBox}" x:Key="ModCheck">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Border Background="{TemplateBinding Background}">
                                <mats:MaterialIcon Name="CheckIcon" Kind="LockCheckOutline" Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckIcon" Property="Kind" Value="CheckboxBlankOutline"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckIcon" Property="Kind" Value="CheckboxMarkedOutline"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="ModCheckBox" BasedOn="{StaticResource Checkbox3}">
            
            
        </Style>-->
        <!--<SolidColorBrush x:Key="Grey1" Color="#FF505050"/>
        <SolidColorBrush x:Key="Grey3" Color="#FF232323"/>
        <SolidColorBrush x:Key="Grey2" Color="#FF3C3C3C"/>-->
    </UserControl.Resources>
</UserControl>
